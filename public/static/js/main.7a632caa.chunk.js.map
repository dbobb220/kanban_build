{"version":3,"sources":["images/kanban_home.png","components/Auth/Login.js","redux/actions/auth.js","redux/actionTypes.js","containers/Login.js","components/Auth/Signup.js","containers/Signup.js","components/Auth/Home.js","components/EditTask.js","redux/actions/loadboard.js","redux/actions/aside.js","containers/EditTask.js","components/Task.js","containers/Task.js","redux/actions/editTask.js","components/Board.js","containers/Board.js","components/NewTask.js","containers/NewTask.js","App.js","containers/App.js","NewApp.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/loadboard.js","redux/reducers/aside.js","redux/reducers/editTask.js","redux/reducers/auth.js","redux/store.js","redux/state.js","index.js"],"names":["module","exports","Login","props","state","username","password","handleChange","bind","onSubmit","e","target","value","name","this","setState","Cookie","set","window","location","reload","Form","className","Group","controlId","Control","type","placeholder","onChange","Button","variant","onClick","Component","userError","bool","err","hasErrored","message","userLoading","isLoading","userSuccess","token","connect","userErrored","user","dispatch","userLogin","obj","console","log","fetch","method","headers","body","JSON","stringify","then","res","text","catch","Signup","credentials","userSignup","style","textAlign","Home","src","kanban","EditTask","color","colorType","title","id","description","category","status","assignee","priority","Bug","Feature","TechDebt","Improvement","Research","payload","fetchLoading","fetchPut","closeAside","updateStatus","Card","width","height","bg","Header","Title","Badge","pill","Body","Text","Footer","Label","required","as","rows","disabled","onDelete","editTask","_id","fetchCall","url","json","tasks","fetchSuccess","fetchError","changeAside","component","asideContainer","asideActive","setStatus","Task","editTaskClick","task","find","t","editClick","openAside","footIcons","key","taskId","margin","bgcolor","textColor","container","Board","backlog","active","done","map","card","i","push","schema","Yup","taskTitle","min","max","taskCategory","taskDescription","taskType","oneOf","NewTask","validationSchema","values","actions","a","bodySubmit","data","resetForm","alert","initialValues","taskColor","handleSubmit","isSubmitting","touched","errors","isValid","noValidate","App","boardContainer","NewApp","appPage","undefined","get","Boolean","hostname","match","combineReducers","action","userIsLoading","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a632caa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kanban_home.fa3da3de.png\";","import React, {Component} from 'react';\nimport {Form, Button} from 'react-bootstrap'\nimport Cookie from 'js-cookie';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.value;\n        let name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n    onSubmit(e) {\n        // let credentials = {\n        //     username: this.username,\n        //     password: this.password\n        // }\n        // this.props.userLoading(true);\n        // this.props.userLogin(credentials);\n        // this.props.userLogin(false);\n        Cookie.set('kanban_crud_cookie', 'asdfasdfsabwefeasdfcd');\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <Form className=\"login\">\n                <Form.Group controlId=\"loginUsername\">\n                    <Form.Control name=\"username\" type=\"text\" placeholder=\"Enter username\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group controlId=\"loginPassword\">\n                    <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Button variant=\"secondary\" onClick={this.onSubmit}>Login</Button>\n            </Form>\n        )\n    }\n}\n\nexport default Login;","import {USER_ERROR, USER_LOADING, USER_SUCCESS} from '../actionTypes'\n\nexport const userError = (bool, err) => {\n    return {\n        type:USER_ERROR,\n        hasErrored: bool,\n        message: err\n    }\n}\n\nexport const userLoading = (bool) => {\n    return {\n        type: USER_LOADING,\n        isLoading: bool\n    }\n}\n\nexport const userSuccess = (token) => {\n    return {\n        type:USER_SUCCESS,\n        token\n    }\n}\n\nexport const userSignup = (obj) => {\n    console.log('user is signing up');\n    return (dispatch) => {\n        fetch('/users', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(obj)\n        })\n        .then(res=>res.text())\n        .then(token=>{\n                dispatch(userSuccess(token));\n            })\n            .catch(err=>dispatch(userError(true, err)))\n    }\n}\n\nexport const userLogin = (obj) => {\n    return (dispatch) => {\n        console.log('user is logging in');\n        fetch('/users', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(obj)\n        })\n        .then(res=>res.text())\n        .then(token=>{\n                dispatch(userSuccess(token));\n            })\n            .catch(err=>dispatch(userError(true, err)))\n    }\n}\n\n// dispatch(userError(true, err))","export const FETCH_ERROR = 'FETCH_ERROR';\nexport const FETCH_LOADING = 'FETCH_LOADING';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const CLOSE_ASIDE = 'CLOSE_ASIDE';\nexport const OPEN_ASIDE = 'OPEN_ASIDE';\nexport const ASIDE_CONTENT = 'ASIDE_CONTENT';\nexport const EDIT_CLICK = 'EDIT_CLICK';\nexport const USER_ERROR = 'USER_ERROR'; \nexport const USER_LOADING = 'USER_LOADING'; \nexport const USER_SUCCESS = 'USER_SUCCESS';","import Login from '../components/Auth/Login';\nimport {connect} from 'react-redux';\nimport {userLogin, userLoading, userError} from '../redux/actions/auth';\n\nconst mapStateToProps = (state) => {\n    return {\n        userLoading: state.userLoading, \n        userErrored: state.userErrored,\n        user: []\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userLogin: (obj) => dispatch(userLogin(obj)),\n        userLoading: (bool) => dispatch(userLoading(bool)),\n        userError: (bool) => dispatch(userError(bool)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react';\nimport {Form, Button} from 'react-bootstrap'\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            username: '',\n            password: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.value;\n        let name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n    onSubmit(e) {\n        let credentials = {\n            name: this.name,\n            username: this.username,\n            password: this.password\n        }\n        this.props.userSignup(credentials);\n    }\n\n    render() {\n    return (\n            <Form className=\"signup\">\n                <Form.Group controlId=\"signupEmail\">\n                    <Form.Control name=\"name\" type=\"name\" placeholder=\"Name\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group controlId=\"signupUsername\">\n                    <Form.Control name=\"username\" type=\"text\" placeholder=\"Username\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group controlId=\"signupPassword\">\n                    <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Button variant=\"primary\" style={{textAlign: 'right'}} onClick={this.onSubmit}>Sign Up</Button>\n            </Form>\n        )\n    }\n}\n\nexport default Signup;","import Signup from '../components/Auth/Signup';\nimport {connect} from 'react-redux';\nimport {userSignup, userLoading, userError} from '../redux/actions/auth';\n\nconst mapStateToProps = (state) => {\n    return {\n        userLoading: state.userLoading, \n        userErrored: state.userErrored,\n        user: []\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userSignup: (obj) => dispatch(userSignup(obj)),\n        userLoading: (bool) => dispatch(userLoading(bool)),\n        userError: (bool) => dispatch(userError(bool)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React from 'react';\nimport Login from '../../containers/Login';\nimport Signup from '../../containers/Signup';\nimport './auth.css'\nimport kanban from '../../images/kanban_home.png'\n\nconst Home = (props) => {\n    return (\n    <div className=\"home\">\n        <section className=\"promo\">\n            <h2>A virtual project management board</h2>\n            <img src={kanban} />\n        </section>\n        <section className=\"auth\">\n            <div>\n                <Login />\n            </div>\n            <div className=\"create_acc\">\n                <h4>Don't have an account?</h4>\n                <h5>Create one below to get started:</h5>\n                <Signup />\n            </div>\n        </section>\n    </div>\n    )\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport {Card, Badge, Form, Button} from 'react-bootstrap';\n\nclass EditTask extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            id: '',\n            description: '',\n            category: '',\n            type: '',\n            status: '',\n            color: '',\n            assignee: null,\n            priority: 3\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.colorType = {\n            Bug: \"danger\",\n            Feature: \"success\",\n            TechDebt: \"warning\",\n            Improvement: \"primary\",\n            Research: \"info\"\n        }\n    }\n\n    handleChange = (e) => {\n        let target = e.target;\n        let value = target.value;\n        let name = target.name;\n        name === \"type\" \n            ? this.setState({type: value, color: this.colorType[value]})\n            : this.setState({[name]: value});\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.editTask._id !== state.id) {\n          return {\n            title: props.editTask.title,\n            id: props.editTask._id,\n            description: props.editTask.description,\n            category: props.editTask.category,\n            type: props.editTask.type,\n            status: props.editTask.status,\n            color: props.editTask.color\n          };\n        }\n        // Return null to indicate no change to state.\n        return null;\n      }\n\n    onSubmit(id) {\n        let payload = this.state;\n        this.props.fetchLoading(true);\n        this.props.fetchPut(`/tasks/${id}`, payload);\n        this.props.fetchLoading(false);\n        this.props.closeAside(false);\n    }\n\n    onDelete(id, value) {\n        this.props.fetchLoading(true);\n        this.props.updateStatus(id, value);\n        this.props.fetchLoading(false);\n        this.props.closeAside(false);\n    }\n\n    render() {\n        return(\n            <div className=\"edit-task\">\n                <Card style={{width:'180px', height:'110px'}} bg=\"light\" text=\"dark\">\n                    <Card.Header>\n                        <Card.Title>{this.state.title}</Card.Title>\n                        <Badge pill variant={this.state.color}>{this.state.category}</Badge>\n                    </Card.Header>\n                    <Card.Body>\n                        <Card.Text>{this.state.description}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\"></Card.Footer>\n                </Card>\n                <Form>\n                <Form.Group controlId=\"taskTitle\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            name=\"title\"\n                            value={this.state.title} \n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"taskCategory\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            name=\"category\"\n                            value={this.state.category}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"taskDescription\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"textarea\" \n                            rows=\"3\" \n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"select\"\n                            name=\"type\"\n                            value={this.state.type}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"- Select One -\" disabled>- Select One -</option>\n                            <option id=\"danger\" value=\"Bug\">Bug</option>\n                            <option id=\"success\" value=\"Feature\">Feature</option>\n                            <option id=\"warning\" value=\"TechDebt\">Tech Debt</option>\n                            <option id=\"primary\" value=\"Improvement\">Improvement</option>\n                            <option id=\"info\" value=\"Research\">Research</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n                <div className=\"buttons\">\n                    <Button variant=\"primary\" type=\"submit\" onClick={()=>{this.onSubmit(this.state.id)}}>Submit</Button>\n                    <Button variant=\"danger\" type=\"submit\" onClick={()=>{this.onDelete(this.state.id, 'isDeleted')}}>Delete</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditTask;","import {FETCH_ERROR, FETCH_LOADING, FETCH_SUCCESS} from '../actionTypes'\n\nexport const fetchError = (bool, err) => {\n    return {\n        type:FETCH_ERROR,\n        hasErrored: bool,\n        message: err\n    }\n}\n\nexport const fetchLoading = (bool) => {\n    return {\n        type: FETCH_LOADING,\n        isLoading: bool\n    }\n}\n\nexport const fetchSuccess = (tasks) => {\n    return {\n        type: FETCH_SUCCESS,\n        tasks\n    }\n}\n\nexport const fetchCall = (url, obj) => {\n    return (dispatch) => {\n        fetch(url, obj)\n        .then(res=>res.json())\n        .then(tasks=>{\n                dispatch(fetchSuccess(tasks));\n            })\n            .catch(err=>dispatch(fetchError(true, err)))\n    }\n}\n\nexport const fetchPut = (url, payload) => {\n    return (dispatch) => {\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(res=> res.text())\n            .then(text=> {\n                console.log(text);\n                dispatch(fetchCall('/tasks'))\n            })\n                .catch(err=>console.log(`Error:${err}`))\n    }\n}\n\nexport const updateStatus = (id, value) => {\n    return (dispatch) => {\n        let setStatus = {status: value};\n        fetch(`/tasks/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(setStatus)\n        })\n        .then(res=>res.text())\n        .then(text=>dispatch(fetchCall('/tasks')))\n            .catch(err=>console.log(`Error:${err}`))\n    }\n}","import {CLOSE_ASIDE, OPEN_ASIDE, ASIDE_CONTENT} from '../actionTypes';\n\nexport const closeAside = (bool) => {\n    return {\n        type: CLOSE_ASIDE,\n        asideActive: false\n    }\n}\n\nexport const openAside = (bool) => {\n    return {\n        type: OPEN_ASIDE,\n        asideActive: true,\n    }\n}\n\nexport const changeAside = (component) => {\n    return {\n        type: ASIDE_CONTENT,\n        asideContainer: component\n    }\n}\n","import EditTask from '../components/EditTask';\nimport { connect } from 'react-redux';\nimport {fetchCall, fetchLoading, fetchPut, updateStatus} from '../redux/actions/loadboard';\nimport {closeAside} from '../redux/actions/aside';\n\nconst mapStateToProps = (state) => {\n    return {\n        editTask: state.editTask,\n        tasks: state.tasks,\n        hasErrored: state.hasErrored,\n        isLoading: state.isLoading,\n        asideContainer: state.asideContainer,\n        asideActive: state.asideActive\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool)),\n        closeAside: ()=> dispatch(closeAside(false)),\n        fetchPut: (url, payload) => dispatch(fetchPut(url, payload)),\n        updateStatus: (id, value) => dispatch(updateStatus(id, value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTask);","import React from 'react';\nimport {Card, Badge} from 'react-bootstrap';\nimport 'material-icons';\nimport './Task.css';\nimport EditTask from '../containers/EditTask';\n\nfunction Task(props) {\n    let updateStatus = (id, value) => {\n        props.fetchLoading(true);\n        let setStatus = {status: value};\n        fetch(`/tasks/${id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(setStatus)\n        })\n        props.fetchCall('/tasks');\n        props.fetchLoading(false);\n    }\n\n    let editTaskClick = (id) => {\n        let task = props.tasks.find(t => t._id === id);\n        props.editClick(task);\n        props.changeAside(['']);\n        props.changeAside(<EditTask />);\n        props.openAside(true);\n    } \n    let footIcons = [];\n    switch(true) {\n        case props.status === \"isBacklog\":\n            footIcons = [\n                <span className=\"material-icons\" title=\"Edit\" key=\"Edit\" onClick={()=>{editTaskClick(props.taskId)}}\n                    >edit</span>,\n                <span className=\"material-icons\" title=\"Activate\" key=\"Activate\" \n                        onClick={()=>{updateStatus(props.taskId, \"isActive\")}}>add</span>\n            ]\n        break;\n        case props.status === \"isActive\":\n            footIcons = [\n                <span className=\"material-icons\" title=\"Edit\" key=\"Edit\" onClick={()=>{editTaskClick(props.taskId)}}>edit</span>,\n                <div key=\"Action\">\n                    <span className=\"material-icons\" title=\"Backlog\" key=\"Backlog\" onClick={()=>{updateStatus(props.taskId, \"isBacklog\"); console.log(props.taskId, \"isDone\")}}>thumb_down</span>\n                    <span className=\"material-icons\" title=\"Done\" key=\"Done\" onClick={()=>{updateStatus(props.taskId, \"isDone\"); console.log(props.taskId, \"isDone\");}}>thumb_up</span>\n                </div>\n            ]\n        break;\n        case props.status === \"isDone\":\n            footIcons = [\n                <span className=\"material-icons\" title=\"Edit\" key=\"Edit\" onClick={()=>{editTaskClick(props.taskId)}}>edit</span>,\n                <div key=\"Action\">\n                    <span className=\"material-icons\" title=\"Reject\" onClick={()=>{updateStatus(props.taskId, \"isActive\");}}>close</span>\n                    <span className=\"material-icons\" title=\"Accept\" onClick={()=>{updateStatus(props.taskId, \"isArchive\"); }}>check</span>\n                </div>\n            ]\n        break;\n        default:\n    }\n    return (\n        <Card style={{width:'180px', height:'110px', margin:'2px'}} bg={props.bgcolor} text={props.textColor}>\n            <Card.Header>\n                <Card.Title>{props.title}</Card.Title>\n                <Badge pill variant={props.color}>{props.category}</Badge>\n            </Card.Header>\n            <Card.Body>\n                <Card.Text>{props.description}</Card.Text>\n            </Card.Body>\n            <Card.Footer className=\"text-muted\">{footIcons}</Card.Footer>\n        </Card>\n    )\n}\n\nexport default Task;\n","import {connect} from 'react-redux';\nimport Task from '../components/Task';\nimport {fetchCall, fetchLoading} from '../redux/actions/loadboard';\nimport {editClick} from '../redux/actions/editTask';\nimport {openAside, changeAside} from '../redux/actions/aside';\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool)),\n        editClick: (taskId) => dispatch(editClick(taskId)),\n        openAside: ()=> dispatch(openAside(true)),\n        changeAside: (container) => dispatch(changeAside(container))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)","import {EDIT_CLICK} from '../actionTypes'\n\nexport const editClick = (taskId) => {\n    return {\n        type: EDIT_CLICK,\n        editTask: taskId\n    }\n}","import React from 'react';\nimport {Row, Col} from 'bootstrap-4-react';\nimport Task from '../containers/Task';\n\nconst Board = (props) => {\n    let backlog = [];\n    let active = [];\n    let done = [];\n\n    // eslint-disable-next-line\n    props.tasks.map((card, i) => {\n        switch(true) {\n            case card.status === 'isBacklog' : backlog.push(<Task \n                    taskId={card._id}\n                    title={card.title}\n                    category={card.category}\n                    description={card.description}\n                    key={i}\n                    bgcolor={\"light\"}\n                    textColor={\"dark\"}\n                    color={card.color}\n                    status={card.status}\n                    // loadTasks={props.loadTasks}\n                />)\n            break \n            case card.status === 'isActive' : active.push(<Task \n                    taskId={card._id}\n                    title={card.title}\n                    category={card.category}\n                    description={card.description}\n                    key={i}\n                    bgcolor={\"light\"}\n                    textColor={\"dark\"}\n                    color={card.color}\n                    status={card.status}\n                    // loadTasks={props.loadTasks}\n                />)\n            break\n            case card.status === 'isDone' : done.push(<Task \n                    taskId={card._id}\n                    title={card.title}\n                    category={card.category}\n                    description={card.description}\n                    key={i}\n                    bgcolor={\"light\"}\n                    textColor={\"dark\"}\n                    color={card.color}\n                    status={card.status}\n                    // loadTasks={props.loadTasks}\n                />)\n            break\n            default:\n    }});\n\n    return (\n            <Row>\n                <Col>\n                    <h3>Backlog</h3>\n                    <div className=\"column backlog\">{backlog}</div>\n                </Col>\n                <Col>\n                    <h3>Active</h3>\n                    <div className=\"column active\">{active}</div>\n                </Col>\n                <Col>\n                    <h3>Done</h3>\n                    <div className=\"column done\">{done}</div>\n                </Col>\n            </Row>\n        // <section className=\"board\">\n        //     <article className=\"column backlog\">\n        //         <h3>Backlog</h3>\n        //         <div>{backlog}</div>\n        //     </article>\n        //     <article className=\"column active\">\n        //         <h3>Active</h3>\n        //         <div>{active}</div>\n        //     </article>\n        //     <article className=\"column done\">\n        //         <h3>Done</h3>\n        //         <div>{done}</div>\n        //     </article>\n        // </section>\n    )\n}\n\nexport default Board","import Board from '../components/Board';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks\n    }\n}\n\nexport default connect(mapStateToProps)(Board);","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport Alert from 'react-bootstrap/Alert'\n\nconst schema = Yup.object({\n    taskTitle: Yup.string()\n        .min(4, 'Task title is too short')\n        .max(20, 'Task title is too long')\n        .required('Required'),\n    taskCategory: Yup.string()\n        .min(3, 'Task category is too short')\n        .max(20, 'Task category is too long')\n        .required('Required'),\n    taskDescription: Yup.string()\n        .required('Required'),\n    taskType: Yup.string()\n        .oneOf(['Bug', 'Feature', 'Tech Debt', 'Improvement', 'Research'], 'Required')\n        .required('Select a task type')\n});\n\nlet colorType = {\n    Bug: \"danger\",\n    Feature: \"success\",\n    TechDebt: \"warning\",\n    Improvement: \"primary\",\n    Research: \"info\"\n}\n\nconst NewTask = (props) => {\n    return (\n    <div>\n        <h3 style={{textAlign:'center'}}>Create Task</h3>\n        <Formik\n            validationSchema={schema}\n            onSubmit={async (values, actions) => {\n                let bodySubmit = {\n                    title: values.taskTitle,\n                    description: values.taskDescription,\n                    category: values.taskCategory,\n                    status: \"isBacklog\",\n                    type: values.taskType,\n                    color: colorType[values.taskType],\n                    assignee: null,\n                    priority: 3,\n                };\n                fetch(`/tasks`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(bodySubmit)\n                })\n                .then(res => res.json())\n                .then(data => {\n                    let message = `'${data.title}' task added to board`;\n                    actions.resetForm();\n                    actions.setStatus({alert: <Alert variant=\"success\">{message}</Alert>});\n                    props.fetchLoading(true);\n                    props.fetchCall('/tasks');\n                    props.fetchLoading(false);\n                })\n                    .catch(err => {\n                        let message = `'${values.taskTitle}' task was not added. ${err}`;\n                        actions.resetForm();\n                        actions.setStatus({alert: <Alert variant=\"danger\">{message}</Alert>});\n                    })\n                \n            }}\n            initialValues={{\n                taskTitle: '',\n                taskCategory: '',\n                taskDescription: '',\n                taskType: '- Select One -',\n                taskColor: '',\n            }}\n        >\n            {({\n                handleSubmit,\n                handleChange,\n                isSubmitting,\n                values,\n                touched,\n                errors,\n                status,\n                isValid\n            }) => (\n                <div>\n                {status ? status.alert : ''}\n                <Form className=\"new_task\" noValidate onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"taskTitle\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            placeholder=\"Keep it short!\"\n                            name=\"taskTitle\"\n                            value={values.taskTitle} \n                            onChange={handleChange}\n                            isValid={touched.taskTitle && !errors.taskTitle}\n                        />\n                        {errors.taskTitle && touched.taskTitle ? (\n                            <div className=\"error\">{errors.taskTitle}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Form.Group controlId=\"taskCategory\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            placeholder=\"Which project/component?\" \n                            name=\"taskCategory\"\n                            value={values.taskCategory}\n                            onChange={handleChange}\n                            isValid={touched.taskCategory && !errors.taskCategory}\n                        />\n                        {errors.taskCategory && touched.taskCategory ? (\n                            <div className=\"error\">{errors.taskCategory}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Form.Group controlId=\"taskDescription\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"textarea\" \n                            rows=\"3\" \n                            name=\"taskDescription\"\n                            placeholder=\"Describe task in one sentence.\"\n                            value={values.taskDescription}\n                            onChange={handleChange}\n                            isValid={touched.taskDescription && !errors.taskDescription}\n                        />\n                        {errors.taskDescription && touched.taskDescription ? (\n                            <div className=\"error\">{errors.taskDescription}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"select\"\n                            name=\"taskType\"\n                            value={values.taskType}\n                            onChange={handleChange}\n                            isValid={touched.taskType && !errors.taskType}\n                        >\n                            <option value=\"- Select One -\" disabled>- Select One -</option>\n                            <option id=\"danger\" value=\"Bug\">Bug</option>\n                            <option id=\"success\" value=\"Feature\">Feature</option>\n                            <option id=\"warning\" value=\"TechDebt\">Tech Debt</option>\n                            <option id=\"primary\" value=\"Improvement\">Improvement</option>\n                            <option id=\"info\" value=\"Research\">Research</option>\n                        </Form.Control>\n                        {errors.taskType && touched.taskType ? (\n                            <div className=\"error\">{errors.taskType}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                        Submit\n                    </Button>\n                </Form>\n                </div>\n            )}\n        </Formik> \n    </div>\n);\n}\n\nexport default NewTask\n","import {connect} from 'react-redux';\nimport NewTask from '../components/NewTask';\nimport {fetchCall, fetchLoading} from '../redux/actions/loadboard';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(NewTask)","import React, {Component} from 'react';\nimport './App.css';\nimport 'material-icons'\nimport Board from './containers/Board';\nimport NewTask from './containers/NewTask';\nimport EditTask from './containers/EditTask'\n\nclass App extends Component {\ncomponentDidMount() {\n    this.props.fetchCall('/tasks');\n    this.props.fetchLoading(false);\n  }\n\n  render() {\n    let boardContainer = [];\n    if(this.props.isLoading) {\n      boardContainer = <p>I'm Loading Here!</p>\n    } else if(this.props.hasErrored) {\n      boardContainer = <h4 className=\"board_error\">There was an issue loading your board. Please reach out to the admin of this page.</h4>\n    } else {\n      boardContainer = <Board tasks={this.props.tasks} />\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Kanban App</h1>\n          <nav>\n            <span className=\"material-icons\" onClick={()=>{this.props.changeAside(<NewTask />); this.props.openAside(true);}} title=\"New Task\">playlist_add</span>\n          </nav>\n        </header>\n        <main>\n          {boardContainer}\n        </main>\n        {!this.props.asideActive\n          ? <aside className=\"aside\">\n              <span className=\"menuclose\" onClick={()=>{this.props.closeAside(false)}}>&times;</span>   \n              {this.props.asideContainer}\n            </aside>\n          : <aside className=\"aside active\">\n              <span className=\"menuclose\" onClick={()=>{this.props.closeAside(false)}}>&times;</span>  \n              {this.props.asideContainer}\n            </aside>\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from '../App';\nimport { connect } from 'react-redux';\nimport {fetchCall, fetchLoading} from '../redux/actions/loadboard';\nimport {closeAside, openAside, changeAside} from '../redux/actions/aside';\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks,\n        hasErrored: state.hasErrored,\n        isLoading: state.isLoading,\n        asideActive: state.asideActive,\n        asideContainer: state.asideContainer,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool)),\n        closeAside: ()=> dispatch(closeAside(false)),\n        openAside: ()=> dispatch(openAside(true)),\n        changeAside: (container) => dispatch(changeAside(container))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from \"react\";\nimport Cookie from \"js-cookie\";\nimport Home from \"./components/Auth/Home\";\nimport App from \"./containers/App\";\n\nfunction NewApp(props) {\n  const cookie = Cookie.get(\"kanban_crud_cookie\");\n  let appPage = [];\n  if (cookie === undefined) {\n    appPage = <Home />;\n  } else {\n    appPage = <App />;\n  }\n  return <div>{appPage}</div>;\n}\n\nexport default NewApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {tasks, hasErrored, isLoading} from './loadboard';\nimport {asideActive, asideContainer} from './aside';\nimport {editTask} from './editTask';\nimport {user, userErrored, userIsLoading} from './auth';\n\n\nexport default combineReducers({tasks, hasErrored, isLoading, asideActive, asideContainer, editTask, user, userErrored, userIsLoading})","import {FETCH_ERROR, FETCH_LOADING, FETCH_SUCCESS} from '../actionTypes'\n\nexport const tasks = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_SUCCESS: \n            return action.tasks\n        default: return state\n    }\n}\n\nexport const hasErrored = (state = false, action) => {\n    switch(action.type) {\n        case FETCH_ERROR: return action.hasErrored;\n        default: return state;\n    }\n}\n\nexport const isLoading = (state = true, action) => {\n    switch(action.type) {\n        case FETCH_LOADING: return action.isLoading;\n        default: return state;\n    }\n}","import {OPEN_ASIDE, CLOSE_ASIDE, ASIDE_CONTENT} from '../actionTypes';\n\nexport const asideActive = (state = false, action) => {\n    switch(action.type) {\n        case OPEN_ASIDE: return action.asideActive;\n        case CLOSE_ASIDE: return action.asideActive;\n        default: return state;\n    }\n}\n\nexport const asideContainer = (state = [], action) => {\n    switch(action.type) {\n        case ASIDE_CONTENT: return action.asideContainer;\n        default: return state;\n    }\n}","import {EDIT_CLICK} from '../actionTypes'\n\nexport const editTask = (state = [], action) => {\n    switch(action.type) {\n        case EDIT_CLICK: return action.editTask;\n        default: return state;\n    };\n}","import {USER_ERROR, USER_LOADING, USER_SUCCESS} from '../actionTypes'\nimport Cookie from 'js-cookie';\n\nexport const user = (state = [], action) => {\n    switch (action.type) {\n        case USER_SUCCESS: {\n            Cookie.set('kanban_crud_cookie', action.token)\n            return state;\n        }\n        default: return state\n    }\n}\n\nexport const userErrored = (state = false, action) => {\n    switch(action.type) {\n        case USER_ERROR: {console.log(action.message); return action.hasErrored};\n        default: return state;\n    }\n}\n\nexport const userIsLoading = (state = true, action) => {\n    switch(action.type) {\n        case USER_LOADING: return action.isLoading;\n        default: return state;\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers/index\";\nimport state from \"./state\";\n\nexport default createStore(reducer, state, applyMiddleware(thunk));\n","export default {\n    tasks: [],\n    isLoading: true,\n    hasErrored: false,\n    asideActive: false,\n    asideContainer: [],\n    editTask: [],\n    user: [],\n    userErrored: false,\n    userIsLoading: false, \n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport NewApp from \"./NewApp\";\nimport * as serviceWorker from \"./serviceWorker\";\n//USER ACCOUNT CODE STARTS HERE!\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <NewApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}