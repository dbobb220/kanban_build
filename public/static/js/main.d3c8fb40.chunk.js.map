{"version":3,"sources":["images/kanban_home.png","components/Auth/Login.js","redux/actions/auth.js","redux/actionTypes.js","containers/Login.js","components/Auth/Signup.js","containers/Signup.js","components/Auth/Home.js","components/EditTask.js","redux/actions/loadboard.js","redux/actions/aside.js","containers/EditTask.js","components/Task.js","containers/Task.js","redux/actions/editTask.js","components/Board.js","containers/Board.js","components/NewTask.js","containers/NewTask.js","App.js","containers/App.js","NewApp.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/loadboard.js","redux/reducers/aside.js","redux/reducers/editTask.js","redux/reducers/auth.js","redux/store.js","redux/state.js","index.js"],"names":["module","exports","Login","props","state","username","password","handleChange","bind","onSubmit","e","target","value","name","this","setState","credentials","userLoading","userLogin","Form","className","Group","controlId","Control","type","placeholder","onChange","Button","variant","onClick","Component","userError","bool","err","hasErrored","message","isLoading","userSuccess","token","connect","userErrored","user","dispatch","obj","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","error","Signup","userSignup","style","textAlign","Home","src","kanban","EditTask","color","colorType","title","id","description","category","status","assignee","priority","Bug","Feature","TechDebt","Improvement","Research","payload","fetchLoading","fetchPut","closeAside","updateStatus","Card","width","height","bg","text","Header","Title","Badge","pill","Body","Text","Footer","Label","required","as","rows","disabled","onDelete","editTask","_id","fetchCall","url","tasks","fetchSuccess","catch","fetchError","changeAside","component","asideContainer","asideActive","setStatus","Task","editTaskClick","task","find","t","editClick","openAside","footIcons","key","taskId","margin","bgcolor","textColor","container","Board","backlog","active","done","map","card","i","push","schema","Yup","taskTitle","min","max","taskCategory","taskDescription","taskType","oneOf","NewTask","validationSchema","values","actions","a","bodySubmit","data","resetForm","alert","initialValues","taskColor","handleSubmit","isSubmitting","touched","errors","isValid","noValidate","App","boardContainer","NewApp","appPage","undefined","Cookie","get","Boolean","window","location","hostname","match","combineReducers","action","set","reload","userIsLoading","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3c8fb40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kanban_home.fa3da3de.png\";","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Cookie from \"js-cookie\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    let target = e.target;\n    let value = target.value;\n    let name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  onSubmit(e) {\n    let credentials = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.userLoading(true);\n    this.props.userLogin(credentials);\n    this.props.userLoading(false);\n  }\n\n  render() {\n    return (\n      <Form className=\"login\">\n        <Form.Group controlId=\"loginUsername\">\n          <Form.Control\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Enter username\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"loginPassword\">\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Button variant=\"secondary\" onClick={this.onSubmit}>\n          Login\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default Login;\n","import { USER_ERROR, USER_LOADING, USER_SUCCESS } from \"../actionTypes\";\n\nexport const userError = (bool, err) => {\n  return {\n    type: USER_ERROR,\n    hasErrored: bool,\n    message: err\n  };\n};\n\nexport const userLoading = bool => {\n  return {\n    type: USER_LOADING,\n    isLoading: bool\n  };\n};\n\nexport const userSuccess = token => {\n  return {\n    type: USER_SUCCESS,\n    token\n  };\n};\n\nexport const userSignup = obj => {\n  console.log(obj);\n  console.log(\"user is signing up\");\n  return dispatch => {\n    fetch(\"/api/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(obj)\n    })\n      .then(res => res.json())\n      .then(token => {\n        !token.error\n          ? dispatch(userSuccess(token))\n          : dispatch(userError(true, token.error));\n      });\n  };\n};\n\nexport const userLogin = obj => {\n  return dispatch => {\n    console.log(\"user is logging in\");\n    fetch(\"/api/session\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(obj)\n    })\n      .then(res => res.json())\n      .then(token => {\n        !token.error\n          ? dispatch(userSuccess(token))\n          : dispatch(userError(true, token.error));\n      });\n  };\n};\n\n// dispatch(userError(true, err))\n","export const FETCH_ERROR = 'FETCH_ERROR';\nexport const FETCH_LOADING = 'FETCH_LOADING';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const CLOSE_ASIDE = 'CLOSE_ASIDE';\nexport const OPEN_ASIDE = 'OPEN_ASIDE';\nexport const ASIDE_CONTENT = 'ASIDE_CONTENT';\nexport const EDIT_CLICK = 'EDIT_CLICK';\nexport const USER_ERROR = 'USER_ERROR'; \nexport const USER_LOADING = 'USER_LOADING'; \nexport const USER_SUCCESS = 'USER_SUCCESS';","import Login from '../components/Auth/Login';\nimport {connect} from 'react-redux';\nimport {userLogin, userLoading, userError} from '../redux/actions/auth';\n\nconst mapStateToProps = (state) => {\n    return {\n        userLoading: state.userLoading, \n        userErrored: state.userErrored,\n        user: []\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userLogin: (obj) => dispatch(userLogin(obj)),\n        userLoading: (bool) => dispatch(userLoading(bool)),\n        userError: (bool) => dispatch(userError(bool)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    let target = e.target;\n    let value = target.value;\n    let name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  onSubmit(e) {\n    let credentials = {\n      name: this.state.name,\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.userLoading(true);\n    this.props.userSignup(credentials);\n    this.props.userLoading(false);\n  }\n\n  render() {\n    return (\n      <Form className=\"signup\">\n        <Form.Group controlId=\"signupEmail\">\n          <Form.Control\n            name=\"name\"\n            type=\"name\"\n            placeholder=\"Name\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"signupUsername\">\n          <Form.Control\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"signupPassword\">\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          style={{ textAlign: \"right\" }}\n          onClick={this.onSubmit}\n        >\n          Sign Up\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default Signup;\n","import Signup from '../components/Auth/Signup';\nimport {connect} from 'react-redux';\nimport {userSignup, userLoading, userError} from '../redux/actions/auth';\n\nconst mapStateToProps = (state) => {\n    return {\n        userLoading: state.userLoading, \n        userErrored: state.userErrored,\n        user: []\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userSignup: (obj) => dispatch(userSignup(obj)),\n        userLoading: (bool) => dispatch(userLoading(bool)),\n        userError: (bool) => dispatch(userError(bool)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React from 'react';\nimport Login from '../../containers/Login';\nimport Signup from '../../containers/Signup';\nimport './auth.css'\nimport kanban from '../../images/kanban_home.png'\n\nconst Home = (props) => {\n    return (\n    <div className=\"home\">\n        <section className=\"promo\">\n            <h2>A virtual project management board</h2>\n            <img src={kanban} />\n        </section>\n        <section className=\"auth\">\n            <div>\n                <Login />\n            </div>\n            <div className=\"create_acc\">\n                <h4>Don't have an account?</h4>\n                <h5>Create one below to get started:</h5>\n                <Signup />\n            </div>\n        </section>\n    </div>\n    )\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport {Card, Badge, Form, Button} from 'react-bootstrap';\n\nclass EditTask extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            id: '',\n            description: '',\n            category: '',\n            type: '',\n            status: '',\n            color: '',\n            assignee: null,\n            priority: 3\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.colorType = {\n            Bug: \"danger\",\n            Feature: \"success\",\n            TechDebt: \"warning\",\n            Improvement: \"primary\",\n            Research: \"info\"\n        }\n    }\n\n    handleChange = (e) => {\n        let target = e.target;\n        let value = target.value;\n        let name = target.name;\n        name === \"type\" \n            ? this.setState({type: value, color: this.colorType[value]})\n            : this.setState({[name]: value});\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.editTask._id !== state.id) {\n          return {\n            title: props.editTask.title,\n            id: props.editTask._id,\n            description: props.editTask.description,\n            category: props.editTask.category,\n            type: props.editTask.type,\n            status: props.editTask.status,\n            color: props.editTask.color\n          };\n        }\n        // Return null to indicate no change to state.\n        return null;\n      }\n\n    onSubmit(id) {\n        let payload = this.state;\n        this.props.fetchLoading(true);\n        this.props.fetchPut(`/tasks/${id}`, payload);\n        this.props.fetchLoading(false);\n        this.props.closeAside(false);\n    }\n\n    onDelete(id, value) {\n        this.props.fetchLoading(true);\n        this.props.updateStatus(id, value);\n        this.props.fetchLoading(false);\n        this.props.closeAside(false);\n    }\n\n    render() {\n        return(\n            <div className=\"edit-task\">\n                <Card style={{width:'180px', height:'110px'}} bg=\"light\" text=\"dark\">\n                    <Card.Header>\n                        <Card.Title>{this.state.title}</Card.Title>\n                        <Badge pill variant={this.state.color}>{this.state.category}</Badge>\n                    </Card.Header>\n                    <Card.Body>\n                        <Card.Text>{this.state.description}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer className=\"text-muted\"></Card.Footer>\n                </Card>\n                <Form>\n                <Form.Group controlId=\"taskTitle\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            name=\"title\"\n                            value={this.state.title} \n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"taskCategory\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            name=\"category\"\n                            value={this.state.category}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"taskDescription\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"textarea\" \n                            rows=\"3\" \n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"select\"\n                            name=\"type\"\n                            value={this.state.type}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"- Select One -\" disabled>- Select One -</option>\n                            <option id=\"danger\" value=\"Bug\">Bug</option>\n                            <option id=\"success\" value=\"Feature\">Feature</option>\n                            <option id=\"warning\" value=\"TechDebt\">Tech Debt</option>\n                            <option id=\"primary\" value=\"Improvement\">Improvement</option>\n                            <option id=\"info\" value=\"Research\">Research</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n                <div className=\"buttons\">\n                    <Button variant=\"primary\" type=\"submit\" onClick={()=>{this.onSubmit(this.state.id)}}>Submit</Button>\n                    <Button variant=\"danger\" type=\"submit\" onClick={()=>{this.onDelete(this.state.id, 'isDeleted')}}>Delete</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditTask;","import {FETCH_ERROR, FETCH_LOADING, FETCH_SUCCESS} from '../actionTypes'\n\nexport const fetchError = (bool, err) => {\n    return {\n        type:FETCH_ERROR,\n        hasErrored: bool,\n        message: err\n    }\n}\n\nexport const fetchLoading = (bool) => {\n    return {\n        type: FETCH_LOADING,\n        isLoading: bool\n    }\n}\n\nexport const fetchSuccess = (tasks) => {\n    return {\n        type: FETCH_SUCCESS,\n        tasks\n    }\n}\n\nexport const fetchCall = (url, obj) => {\n    return (dispatch) => {\n        fetch(url, obj)\n        .then(res=>res.json())\n        .then(tasks=>{\n                dispatch(fetchSuccess(tasks));\n            })\n            .catch(err=>dispatch(fetchError(true, err)))\n    }\n}\n\nexport const fetchPut = (url, payload) => {\n    return (dispatch) => {\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        })\n            .then(res=> res.text())\n            .then(text=> {\n                console.log(text);\n                dispatch(fetchCall('/tasks'))\n            })\n                .catch(err=>console.log(`Error:${err}`))\n    }\n}\n\nexport const updateStatus = (id, value) => {\n    return (dispatch) => {\n        let setStatus = {status: value};\n        fetch(`/tasks/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(setStatus)\n        })\n        .then(res=>res.text())\n        .then(text=>dispatch(fetchCall('/tasks')))\n            .catch(err=>console.log(`Error:${err}`))\n    }\n}","import {CLOSE_ASIDE, OPEN_ASIDE, ASIDE_CONTENT} from '../actionTypes';\n\nexport const closeAside = (bool) => {\n    return {\n        type: CLOSE_ASIDE,\n        asideActive: false\n    }\n}\n\nexport const openAside = (bool) => {\n    return {\n        type: OPEN_ASIDE,\n        asideActive: true,\n    }\n}\n\nexport const changeAside = (component) => {\n    return {\n        type: ASIDE_CONTENT,\n        asideContainer: component\n    }\n}\n","import EditTask from '../components/EditTask';\nimport { connect } from 'react-redux';\nimport {fetchCall, fetchLoading, fetchPut, updateStatus} from '../redux/actions/loadboard';\nimport {closeAside} from '../redux/actions/aside';\n\nconst mapStateToProps = (state) => {\n    return {\n        editTask: state.editTask,\n        tasks: state.tasks,\n        hasErrored: state.hasErrored,\n        isLoading: state.isLoading,\n        asideContainer: state.asideContainer,\n        asideActive: state.asideActive\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool)),\n        closeAside: ()=> dispatch(closeAside(false)),\n        fetchPut: (url, payload) => dispatch(fetchPut(url, payload)),\n        updateStatus: (id, value) => dispatch(updateStatus(id, value))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTask);","import React from 'react';\nimport {Card, Badge} from 'react-bootstrap';\nimport 'material-icons';\nimport './Task.css';\nimport EditTask from '../containers/EditTask';\n\nfunction Task(props) {\n    let updateStatus = (id, value) => {\n        props.fetchLoading(true);\n        let setStatus = {status: value};\n        fetch(`/tasks/${id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(setStatus)\n        })\n        props.fetchCall('/tasks');\n        props.fetchLoading(false);\n    }\n\n    let editTaskClick = (id) => {\n        let task = props.tasks.find(t => t._id === id);\n        props.editClick(task);\n        props.changeAside(['']);\n        props.changeAside(<EditTask />);\n        props.openAside(true);\n    } \n    let footIcons = [];\n    switch(true) {\n        case props.status === \"isBacklog\":\n            footIcons = [\n                <span className=\"material-icons\" title=\"Edit\" key=\"Edit\" onClick={()=>{editTaskClick(props.taskId)}}\n                    >edit</span>,\n                <span className=\"material-icons\" title=\"Activate\" key=\"Activate\" \n                        onClick={()=>{updateStatus(props.taskId, \"isActive\")}}>add</span>\n            ]\n        break;\n        case props.status === \"isActive\":\n            footIcons = [\n                <span className=\"material-icons\" title=\"Edit\" key=\"Edit\" onClick={()=>{editTaskClick(props.taskId)}}>edit</span>,\n                <div key=\"Action\">\n                    <span className=\"material-icons\" title=\"Backlog\" key=\"Backlog\" onClick={()=>{updateStatus(props.taskId, \"isBacklog\"); console.log(props.taskId, \"isDone\")}}>thumb_down</span>\n                    <span className=\"material-icons\" title=\"Done\" key=\"Done\" onClick={()=>{updateStatus(props.taskId, \"isDone\"); console.log(props.taskId, \"isDone\");}}>thumb_up</span>\n                </div>\n            ]\n        break;\n        case props.status === \"isDone\":\n            footIcons = [\n                <span className=\"material-icons\" title=\"Edit\" key=\"Edit\" onClick={()=>{editTaskClick(props.taskId)}}>edit</span>,\n                <div key=\"Action\">\n                    <span className=\"material-icons\" title=\"Reject\" onClick={()=>{updateStatus(props.taskId, \"isActive\");}}>close</span>\n                    <span className=\"material-icons\" title=\"Accept\" onClick={()=>{updateStatus(props.taskId, \"isArchive\"); }}>check</span>\n                </div>\n            ]\n        break;\n        default:\n    }\n    return (\n        <Card style={{width:'180px', height:'110px', margin:'2px'}} bg={props.bgcolor} text={props.textColor}>\n            <Card.Header>\n                <Card.Title>{props.title}</Card.Title>\n                <Badge pill variant={props.color}>{props.category}</Badge>\n            </Card.Header>\n            <Card.Body>\n                <Card.Text>{props.description}</Card.Text>\n            </Card.Body>\n            <Card.Footer className=\"text-muted\">{footIcons}</Card.Footer>\n        </Card>\n    )\n}\n\nexport default Task;\n","import {connect} from 'react-redux';\nimport Task from '../components/Task';\nimport {fetchCall, fetchLoading} from '../redux/actions/loadboard';\nimport {editClick} from '../redux/actions/editTask';\nimport {openAside, changeAside} from '../redux/actions/aside';\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool)),\n        editClick: (taskId) => dispatch(editClick(taskId)),\n        openAside: ()=> dispatch(openAside(true)),\n        changeAside: (container) => dispatch(changeAside(container))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)","import {EDIT_CLICK} from '../actionTypes'\n\nexport const editClick = (taskId) => {\n    return {\n        type: EDIT_CLICK,\n        editTask: taskId\n    }\n}","import React from 'react';\nimport {Row, Col} from 'bootstrap-4-react';\nimport Task from '../containers/Task';\n\nconst Board = (props) => {\n    let backlog = [];\n    let active = [];\n    let done = [];\n\n    // eslint-disable-next-line\n    props.tasks.map((card, i) => {\n        switch(true) {\n            case card.status === 'isBacklog' : backlog.push(<Task \n                    taskId={card._id}\n                    title={card.title}\n                    category={card.category}\n                    description={card.description}\n                    key={i}\n                    bgcolor={\"light\"}\n                    textColor={\"dark\"}\n                    color={card.color}\n                    status={card.status}\n                    // loadTasks={props.loadTasks}\n                />)\n            break \n            case card.status === 'isActive' : active.push(<Task \n                    taskId={card._id}\n                    title={card.title}\n                    category={card.category}\n                    description={card.description}\n                    key={i}\n                    bgcolor={\"light\"}\n                    textColor={\"dark\"}\n                    color={card.color}\n                    status={card.status}\n                    // loadTasks={props.loadTasks}\n                />)\n            break\n            case card.status === 'isDone' : done.push(<Task \n                    taskId={card._id}\n                    title={card.title}\n                    category={card.category}\n                    description={card.description}\n                    key={i}\n                    bgcolor={\"light\"}\n                    textColor={\"dark\"}\n                    color={card.color}\n                    status={card.status}\n                    // loadTasks={props.loadTasks}\n                />)\n            break\n            default:\n    }});\n\n    return (\n            <Row>\n                <Col>\n                    <h3>Backlog</h3>\n                    <div className=\"column backlog\">{backlog}</div>\n                </Col>\n                <Col>\n                    <h3>Active</h3>\n                    <div className=\"column active\">{active}</div>\n                </Col>\n                <Col>\n                    <h3>Done</h3>\n                    <div className=\"column done\">{done}</div>\n                </Col>\n            </Row>\n        // <section className=\"board\">\n        //     <article className=\"column backlog\">\n        //         <h3>Backlog</h3>\n        //         <div>{backlog}</div>\n        //     </article>\n        //     <article className=\"column active\">\n        //         <h3>Active</h3>\n        //         <div>{active}</div>\n        //     </article>\n        //     <article className=\"column done\">\n        //         <h3>Done</h3>\n        //         <div>{done}</div>\n        //     </article>\n        // </section>\n    )\n}\n\nexport default Board","import Board from '../components/Board';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks\n    }\n}\n\nexport default connect(mapStateToProps)(Board);","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport Alert from 'react-bootstrap/Alert'\n\nconst schema = Yup.object({\n    taskTitle: Yup.string()\n        .min(4, 'Task title is too short')\n        .max(20, 'Task title is too long')\n        .required('Required'),\n    taskCategory: Yup.string()\n        .min(3, 'Task category is too short')\n        .max(20, 'Task category is too long')\n        .required('Required'),\n    taskDescription: Yup.string()\n        .required('Required'),\n    taskType: Yup.string()\n        .oneOf(['Bug', 'Feature', 'Tech Debt', 'Improvement', 'Research'], 'Required')\n        .required('Select a task type')\n});\n\nlet colorType = {\n    Bug: \"danger\",\n    Feature: \"success\",\n    TechDebt: \"warning\",\n    Improvement: \"primary\",\n    Research: \"info\"\n}\n\nconst NewTask = (props) => {\n    return (\n    <div>\n        <h3 style={{textAlign:'center'}}>Create Task</h3>\n        <Formik\n            validationSchema={schema}\n            onSubmit={async (values, actions) => {\n                let bodySubmit = {\n                    title: values.taskTitle,\n                    description: values.taskDescription,\n                    category: values.taskCategory,\n                    status: \"isBacklog\",\n                    type: values.taskType,\n                    color: colorType[values.taskType],\n                    assignee: null,\n                    priority: 3,\n                };\n                fetch(`/tasks`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(bodySubmit)\n                })\n                .then(res => res.json())\n                .then(data => {\n                    let message = `'${data.title}' task added to board`;\n                    actions.resetForm();\n                    actions.setStatus({alert: <Alert variant=\"success\">{message}</Alert>});\n                    props.fetchLoading(true);\n                    props.fetchCall('/tasks');\n                    props.fetchLoading(false);\n                })\n                    .catch(err => {\n                        let message = `'${values.taskTitle}' task was not added. ${err}`;\n                        actions.resetForm();\n                        actions.setStatus({alert: <Alert variant=\"danger\">{message}</Alert>});\n                    })\n                \n            }}\n            initialValues={{\n                taskTitle: '',\n                taskCategory: '',\n                taskDescription: '',\n                taskType: '- Select One -',\n                taskColor: '',\n            }}\n        >\n            {({\n                handleSubmit,\n                handleChange,\n                isSubmitting,\n                values,\n                touched,\n                errors,\n                status,\n                isValid\n            }) => (\n                <div>\n                {status ? status.alert : ''}\n                <Form className=\"new_task\" noValidate onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"taskTitle\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            placeholder=\"Keep it short!\"\n                            name=\"taskTitle\"\n                            value={values.taskTitle} \n                            onChange={handleChange}\n                            isValid={touched.taskTitle && !errors.taskTitle}\n                        />\n                        {errors.taskTitle && touched.taskTitle ? (\n                            <div className=\"error\">{errors.taskTitle}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Form.Group controlId=\"taskCategory\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control \n                            required\n                            type=\"text\" \n                            placeholder=\"Which project/component?\" \n                            name=\"taskCategory\"\n                            value={values.taskCategory}\n                            onChange={handleChange}\n                            isValid={touched.taskCategory && !errors.taskCategory}\n                        />\n                        {errors.taskCategory && touched.taskCategory ? (\n                            <div className=\"error\">{errors.taskCategory}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Form.Group controlId=\"taskDescription\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"textarea\" \n                            rows=\"3\" \n                            name=\"taskDescription\"\n                            placeholder=\"Describe task in one sentence.\"\n                            value={values.taskDescription}\n                            onChange={handleChange}\n                            isValid={touched.taskDescription && !errors.taskDescription}\n                        />\n                        {errors.taskDescription && touched.taskDescription ? (\n                            <div className=\"error\">{errors.taskDescription}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control \n                            required\n                            as=\"select\"\n                            name=\"taskType\"\n                            value={values.taskType}\n                            onChange={handleChange}\n                            isValid={touched.taskType && !errors.taskType}\n                        >\n                            <option value=\"- Select One -\" disabled>- Select One -</option>\n                            <option id=\"danger\" value=\"Bug\">Bug</option>\n                            <option id=\"success\" value=\"Feature\">Feature</option>\n                            <option id=\"warning\" value=\"TechDebt\">Tech Debt</option>\n                            <option id=\"primary\" value=\"Improvement\">Improvement</option>\n                            <option id=\"info\" value=\"Research\">Research</option>\n                        </Form.Control>\n                        {errors.taskType && touched.taskType ? (\n                            <div className=\"error\">{errors.taskType}</div>\n                        ) : null}\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                        Submit\n                    </Button>\n                </Form>\n                </div>\n            )}\n        </Formik> \n    </div>\n);\n}\n\nexport default NewTask\n","import {connect} from 'react-redux';\nimport NewTask from '../components/NewTask';\nimport {fetchCall, fetchLoading} from '../redux/actions/loadboard';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(NewTask)","import React, {Component} from 'react';\nimport './App.css';\nimport 'material-icons'\nimport Board from './containers/Board';\nimport NewTask from './containers/NewTask';\nimport EditTask from './containers/EditTask'\n\nclass App extends Component {\ncomponentDidMount() {\n    this.props.fetchCall('/tasks');\n    this.props.fetchLoading(false);\n  }\n\n  render() {\n    let boardContainer = [];\n    if(this.props.isLoading) {\n      boardContainer = <p>I'm Loading Here!</p>\n    } else if(this.props.hasErrored) {\n      boardContainer = <h4 className=\"board_error\">There was an issue loading your board. Please reach out to the admin of this page.</h4>\n    } else {\n      boardContainer = <Board tasks={this.props.tasks} />\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Kanban App</h1>\n          <nav>\n            <span className=\"material-icons\" onClick={()=>{this.props.changeAside(<NewTask />); this.props.openAside(true);}} title=\"New Task\">playlist_add</span>\n          </nav>\n        </header>\n        <main>\n          {boardContainer}\n        </main>\n        {!this.props.asideActive\n          ? <aside className=\"aside\">\n              <span className=\"menuclose\" onClick={()=>{this.props.closeAside(false)}}>&times;</span>   \n              {this.props.asideContainer}\n            </aside>\n          : <aside className=\"aside active\">\n              <span className=\"menuclose\" onClick={()=>{this.props.closeAside(false)}}>&times;</span>  \n              {this.props.asideContainer}\n            </aside>\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from '../App';\nimport { connect } from 'react-redux';\nimport {fetchCall, fetchLoading} from '../redux/actions/loadboard';\nimport {closeAside, openAside, changeAside} from '../redux/actions/aside';\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks,\n        hasErrored: state.hasErrored,\n        isLoading: state.isLoading,\n        asideActive: state.asideActive,\n        asideContainer: state.asideContainer,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCall: (url) => dispatch(fetchCall(url)),\n        fetchLoading: (bool) => dispatch(fetchLoading(bool)),\n        closeAside: ()=> dispatch(closeAside(false)),\n        openAside: ()=> dispatch(openAside(true)),\n        changeAside: (container) => dispatch(changeAside(container))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import React from \"react\";\nimport Cookie from \"js-cookie\";\nimport Home from \"./components/Auth/Home\";\nimport App from \"./containers/App\";\n\nfunction NewApp(props) {\n  const cookie = Cookie.get(\"kanban_crud_cookie\");\n  let appPage = [];\n  if (cookie === undefined) {\n    appPage = <Home />;\n  } else {\n    appPage = <App />;\n  }\n  return <div>{appPage}</div>;\n}\n\nexport default NewApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {tasks, hasErrored, isLoading} from './loadboard';\nimport {asideActive, asideContainer} from './aside';\nimport {editTask} from './editTask';\nimport {user, userErrored, userIsLoading} from './auth';\n\n\nexport default combineReducers({tasks, hasErrored, isLoading, asideActive, asideContainer, editTask, user, userErrored, userIsLoading})","import {FETCH_ERROR, FETCH_LOADING, FETCH_SUCCESS} from '../actionTypes'\n\nexport const tasks = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_SUCCESS: \n            return action.tasks\n        default: return state\n    }\n}\n\nexport const hasErrored = (state = false, action) => {\n    switch(action.type) {\n        case FETCH_ERROR: return action.hasErrored;\n        default: return state;\n    }\n}\n\nexport const isLoading = (state = true, action) => {\n    switch(action.type) {\n        case FETCH_LOADING: return action.isLoading;\n        default: return state;\n    }\n}","import {OPEN_ASIDE, CLOSE_ASIDE, ASIDE_CONTENT} from '../actionTypes';\n\nexport const asideActive = (state = false, action) => {\n    switch(action.type) {\n        case OPEN_ASIDE: return action.asideActive;\n        case CLOSE_ASIDE: return action.asideActive;\n        default: return state;\n    }\n}\n\nexport const asideContainer = (state = [], action) => {\n    switch(action.type) {\n        case ASIDE_CONTENT: return action.asideContainer;\n        default: return state;\n    }\n}","import {EDIT_CLICK} from '../actionTypes'\n\nexport const editTask = (state = [], action) => {\n    switch(action.type) {\n        case EDIT_CLICK: return action.editTask;\n        default: return state;\n    };\n}","import { USER_ERROR, USER_LOADING, USER_SUCCESS } from \"../actionTypes\";\nimport Cookie from \"js-cookie\";\n\nexport const user = (state = [], action) => {\n  switch (action.type) {\n    case USER_SUCCESS: {\n      Cookie.set(\"kanban_crud_cookie\", action.token).then(\n        window.location.reload()\n      );\n    }\n    default:\n      return state;\n  }\n};\n\nexport const userErrored = (state = false, action) => {\n  switch (action.type) {\n    case USER_ERROR: {\n      console.log(action.message);\n      return action.hasErrored;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const userIsLoading = (state = true, action) => {\n  switch (action.type) {\n    case USER_LOADING:\n      return action.isLoading;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers/index\";\nimport state from \"./state\";\n\nexport default createStore(reducer, state, applyMiddleware(thunk));\n","export default {\n    tasks: [],\n    isLoading: true,\n    hasErrored: false,\n    asideActive: false,\n    asideContainer: [],\n    editTask: [],\n    user: [],\n    userErrored: false,\n    userIsLoading: false, \n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport NewApp from \"./NewApp\";\nimport * as serviceWorker from \"./serviceWorker\";\n//USER ACCOUNT CODE STARTS HERE!\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <NewApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}